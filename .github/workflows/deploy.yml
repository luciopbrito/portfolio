name: Deploy Porfolio on VPS

on:
    push:
        branches:
            - main
    workflow_dispatch: 

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            
            - name: build application and dependencies
              uses: actions/setup-node@v4
              with:
                node-version: '18.18.0'
            - run: npm ci
            - run: npm run build

            - name: Upload dist folder as artifact
              uses: actions/upload-artifact@v4
              with:
                name: dist
                path: dist/
    deploy:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Download dist artifact
              uses: actions/download-artifact@v4
              with:
                name: dist
                path: dist
            - name: Display structure of downloaded files
              run: ls -R dist

            - name: save ssh key
              run: |
                # Save the private SSH key to a file
                echo -e "${{ secrets.SSH_KEY }}" > /tmp/id_rsa
                chmod 600 /tmp/id_rsa

            - name: Ensure SSH directory exists
              run: mkdir -p ~/.ssh

            - name: Add SSH Host to Known Hosts
              run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
            
            - name: Test SSH Connection
              run: ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "echo 'SSH connection successful'"
            
            - name: Deploy - Copy the contents of the dist folder to the server
              run: |
                # Copy the contents of the dist folder to the server
                rsync -avz --delete -e "ssh -i /tmp/id_rsa"  dist/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_FOLDER }}
                
            - name: Restart Web Server 
              env: 
                DO_HOST: ${{ secrets.SSH_HOST }}  # The hostname or IP address of your server
                DO_USER: ${{ secrets.SSH_USERNAME }}  # The SSH user for your server (e.g., 'root' or 'username')
                DO_RESTART_SERVER: ${{ secrets.SSS_RESTART_SERVER }}  # The SSH user for your server (e.g., 'root' or 'username')
              run: | 
                # restart webserver
                ssh -i /tmp/id_rsa $DO_USER@$DO_HOST "$DO_RESTART_SERVER"
            
            - name: Clean up
              run: |
                # Clean up
                rm /tmp/id_rsa

        
